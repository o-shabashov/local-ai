services:
  pgsql:
    container_name: 'local-ai-pgsql'
    image: postgres:latest
    restart: on-failure
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - 'local-ai-pgsql:/var/lib/postgresql/data'
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
      retries: 3
      timeout: 5s

  searxng:
    image: searxng/searxng
    ports:
      - '32768:8080'
    volumes:
      - 'searxng:/etc/searxng'
    environment:
      BASE_URL: "http://localhost:32768/"
      INSTANCE_NAME: "my-searxng-instance"
    restart: always

  n8n:
    container_name: 'n8n'
    image: docker.n8n.io/n8nio/n8n
    restart: always
    ports:
      - '5678:5678'
    environment:
      N8N_RUNNERS_ENABLED: 'true'
      N8N_LOG_LEVEL: 'debug'
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: 'true'
    volumes:
      - 'n8n_data:/home/node/.n8n'

  open-webui:
    container_name: 'open-webui'
    image: ghcr.io/open-webui/open-webui:main
    ports:
      - '3000:8080'
    environment:
      - ADD_HOST=host.docker.internal:host-gateway
    volumes:
      - 'open-webui:/app/backend/data'
    restart: always

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --run-once open-webui
    restart: no

volumes:
  local-ai-pgsql:
    driver: local
  open-webui:
    driver: local
  searxng:
    driver: local
  n8n_data:
    driver: local
